# have to change directory because some filepaths are hardcoded relative style
setwd("~/jsm22_pp/")
cNames <- c("lw_aux_prior", "lw_aux_csv", "lw2_prior","lw2_csv", "swarm_prior", "swarm_csv", "pf_est")
outFiles <- paste0(cNames, ".txt")
outFiles <- paste("data/cond_likes/",outFiles, sep ="")
allOutput <- as.data.frame(lapply(outFiles, read.csv, header=F))
colnames(allOutput) <- cNames
allOutput$time <- seq_along(allOutput[,1])
dim(allOutput)
cumsum(allOutput)
dim(cumsum(allOutput)
)
colnames(allOutput)
colnames(allOutput) != 'time'
allCumsumOutput <- cumsum(allOutput[,colnames(allOutput) != 'time'])
dim(allCumsumOutput)
allCumsumOutput <- cumsum(allOutput[,colnames(allOutput) != 'time'])
allCumsumOutput$time <- seq_along(allCumsumOutput[,1])
#allOutput <- allOutput[51:100,] # temporary line to help visualize stuff by pulling out random chunk
mdf <- melt(allOutput, id.vars = "time")
ggplot(mdf,                            # Draw ggplot2 time series plot
aes(x = time,
y = value,
col = variable)) +
geom_line()
# /**
#   * RUN MODES
# * 2. Run the Liu-West1 (original auxiliary style) filter for conditional likelihoods (sampling parameters from prior)
# * 5. Run the Liu-West1 (original auxiliary style) filter for conditional likelihoods (sampling parameters from csv)
# * 8. Run the Liu-West2 filter for conditional likelihoods (sampling parameters from prior)
# * 11. Run the Liu-West2 filter for conditional likelihoods (sampling parameters from csv)
# * 14. Run the Particle Swarm (bootstrap filters) algorithm for conditional likelihoods (sampling parameters from prior)
# * 17. Run the Particle Swarm (bootstrap filters) algorithm for conditional likelihoods (sampling parameters from csv)
# * 20. Run standard auxiliary particle filter for conditional likelihoods (with given parameter estimates).
# */
library(ggplot2)
library(reshape2)
# have to change directory because some filepaths are hardcoded relative style
setwd("~/jsm22_pp/")
cNames <- c("lw_aux_prior", "lw_aux_csv", "lw2_prior","lw2_csv", "swarm_prior", "swarm_csv", "pf_est")
outFiles <- paste0(cNames, ".txt")
outFiles <- paste("data/cond_likes/",outFiles, sep ="")
allOutput <- as.data.frame(lapply(outFiles, read.csv, header=F))
colnames(allOutput) <- cNames
allOutput$time <- seq_along(allOutput[,1])
allCumsumOutput <- cumsum(allOutput[,colnames(allOutput) != 'time'])
allCumsumOutput$time <- seq_along(allCumsumOutput[,1])
pdf("plots/cond_likes_vis/clike_vis.pdf")
mdf <- melt(allOutput, id.vars = "time")
ggplot(mdf,                            # Draw ggplot2 time series plot
aes(x = time,
y = value,
col = variable)) +
geom_line()
dev.off()
pdf("plots/cond_likes_vis/cumsum_clike_vis.pdf")
cmdf <- melt(allCumsumOutput, id.vars = "time")
ggplot(cmdf,                            # Draw ggplot2 time series plot
aes(x = time,
y = value,
col = variable)) +
geom_line()
dev.off()
# /**
#   * RUN MODES
# * 2. Run the Liu-West1 (original auxiliary style) filter for conditional likelihoods (sampling parameters from prior)
# * 5. Run the Liu-West1 (original auxiliary style) filter for conditional likelihoods (sampling parameters from csv)
# * 8. Run the Liu-West2 filter for conditional likelihoods (sampling parameters from prior)
# * 11. Run the Liu-West2 filter for conditional likelihoods (sampling parameters from csv)
# * 14. Run the Particle Swarm (bootstrap filters) algorithm for conditional likelihoods (sampling parameters from prior)
# * 17. Run the Particle Swarm (bootstrap filters) algorithm for conditional likelihoods (sampling parameters from csv)
# * 20. Run standard auxiliary particle filter for conditional likelihoods (with given parameter estimates).
# */
library(ggplot2)
library(reshape2)
# have to change directory because some filepaths are hardcoded relative style
setwd("~/jsm22_pp/")
cNames <- c("lw_aux_prior", "lw_aux_csv", "lw2_prior","lw2_csv", "swarm_prior", "swarm_csv", "pf_est")
outFiles <- paste0(cNames, ".txt")
outFiles <- paste("data/cond_likes/",outFiles, sep ="")
allOutput <- as.data.frame(lapply(outFiles, read.csv, header=F))
colnames(allOutput) <- cNames
allOutput$time <- seq_along(allOutput[,1])
cNames <- c("lw_aux_prior", "lw_aux_csv", "lw2_prior","lw2_csv", "swarm_prior", "swarm_csv", "pf_est")
outFiles <- paste0(cNames, ".txt")
outFiles <- paste("data/cond_likes/",outFiles, sep ="")
allOutput <- as.data.frame(lapply(outFiles, read.csv, header=F))
read.csv("data/SPY_returns_estimation.csv", header = F)
nrow(read.csv("data/SPY_returns_estimation.csv", header = F))
fullSize <- nrow(read.csv("data/SPY_returns.csv", header = F))
#fullSize <- nrow(read.csv("data/SPY_returns.csv", header = F))
nrow(allOutput)
?read.csv("data/SPY.csv")
?read.zoo
??read.zoo
library(zoo)
head(read.zoo("data/SPY.csv"))
read.csv.zoo("data/SPY.csv", header=T)
SPY <- read.csv.zoo("data/SPY.csv", header=T)
index(SPY) < start
index(SPY)
index(SPY) < testPriceStart
# remove filtering output on data on and before training data
# warning: the following variable is based off of something
# that's hardcoded in another file e.g. trainStop <- "2010-12-31"
testPriceStart <- "2011-01-01"
index(SPY) < testPriceStart
sum(index(SPY) < testPriceStart)
numDaysToDisregard <- sum(index(SPY) < testPriceStart)
# remove filtering output on data on and before training data
# warning: the following variable is based off of something
# that's hardcoded in another file e.g. trainStop <- "2010-12-31"
testPriceStart <- "2011-01-01"
SPY <- read.csv.zoo("data/SPY.csv", header=T)
numDaysToDisregard <- sum(index(SPY) < testPriceStart)
numCondLikesToDisregard <- numDaysToDisregard - 2
nrow(allO)
# /**
#   * RUN MODES
# * 2. Run the Liu-West1 (original auxiliary style) filter for conditional likelihoods (sampling parameters from prior)
# * 5. Run the Liu-West1 (original auxiliary style) filter for conditional likelihoods (sampling parameters from csv)
# * 8. Run the Liu-West2 filter for conditional likelihoods (sampling parameters from prior)
# * 11. Run the Liu-West2 filter for conditional likelihoods (sampling parameters from csv)
# * 14. Run the Particle Swarm (bootstrap filters) algorithm for conditional likelihoods (sampling parameters from prior)
# * 17. Run the Particle Swarm (bootstrap filters) algorithm for conditional likelihoods (sampling parameters from csv)
# * 20. Run standard auxiliary particle filter for conditional likelihoods (with given parameter estimates).
# */
library(ggplot2)
library(reshape2)
library(zoo)
# have to change directory because some filepaths are hardcoded relative style
setwd("~/jsm22_pp/")
cNames <- c("lw_aux_prior", "lw_aux_csv", "lw2_prior","lw2_csv", "swarm_prior", "swarm_csv", "pf_est")
outFiles <- paste0(cNames, ".txt")
outFiles <- paste("data/cond_likes/",outFiles, sep ="")
allOutput <- as.data.frame(lapply(outFiles, read.csv, header=F))
# remove filtering output on data on and before training data
# warning: the following variable is based off of something
# that's hardcoded in another file e.g. trainStop <- "2010-12-31"
testPriceStart <- "2011-01-01"
numDaysToDisregard <- sum(index(read.csv.zoo("data/SPY.csv", header=T)) < testPriceStart)
numCondLikesToDisregard <- numDaysToDisregard - 2
nrow(allOutput)
# ^ one for conversion from prices to returns, and one from the lagged predictor
allOutput <- allOutput[-(1:numCondLikesToDisregard),]
nrow(allOutput)
colnames(allOutput) <- cNames
allOutput$time <- seq_along(allOutput[,1])
setwd("~/jsm22_pp/")
cNames <- c("lw_aux_prior", "lw_aux_csv", "lw2_prior","lw2_csv", "swarm_prior", "swarm_csv", "pf_est")
outFiles <- paste0(cNames, ".txt")
outFiles <- paste("data/cond_likes/",outFiles, sep ="")
allOutput <- as.data.frame(lapply(outFiles, read.csv, header=F))
## remove filtering output on data on and before training data
# warning: the following variable is based off of something
# that's hardcoded in another file e.g. trainStop <- "2010-12-31"
testPriceStart <- "2011-01-01"
numDaysToDisregard <- sum(index(read.csv.zoo("data/SPY.csv", header=T)) < testPriceStart)
numCondLikesToDisregard <- numDaysToDisregard - 2
# ^ one for conversion from prices to returns, and one from the lagged predictor
allOutput <- allOutput[-(1:numCondLikesToDisregard),]
colnames(allOutput) <- cNames
allOutput$time <- seq_along(allOutput[,1])
## create a cumulative sum data set
allCumsumOutput <- cumsum(allOutput[,colnames(allOutput) != 'time'])
allCumsumOutput$time <- seq_along(allCumsumOutput[,1])
mdf <- melt(allOutput, id.vars = "time")
ggplot(mdf,                            # Draw ggplot2 time series plot
aes(x = time,
y = value,
col = variable)) +
geom_line()
cmdf <- melt(allCumsumOutput, id.vars = "time")
ggplot(cmdf,                            # Draw ggplot2 time series plot
aes(x = time,
y = value,
col = variable)) +
geom_line()
rm(list=ls())
setwd("~/jsm22_pp/data")
d <- read.csv("param_samples.csv", header=F)
head(d)
hist(d[,1])
colnames(d) <- c("phi", "mu", "sigma", "rho")
head(d)
hist(d[,1])
hist(d[,2])
hist(d[,3])
hist(d[,4])
plot.ts(d[,1])
plot.ts(d[-(1:100),1])
plot.ts(d[-(1:100),1])
quantile
?quantile
quantile(d[,1])
quantile(d[,1],probs=c(.025, .975))
quantile(d[,2],probs=c(.025, .975))
quantile(d[,3],probs=c(.025, .975))
quantile(d[,4],probs=c(.025, .975))
